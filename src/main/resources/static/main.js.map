{"version":3,"sources":["./src/app/directives/numeric.directive.ts","./src/app/services/toast.service.ts","./src/app/components/city-form/city-form.component.ts","./src/app/components/city-form/city-form.component.html","./src/app/components/cities-ordering/cities-ordering.component.ts","./src/app/components/cities-ordering/cities-ordering.component.html","./src/app/models/filters.ts","./src/environments/environment.ts","./src/app/models/government.ts","./src/app/components/cities/cities.component.ts","./src/app/components/cities/cities.component.html","./src/app/components/city-depart/city-depart.component.ts","./src/app/components/city-depart/city-depart.component.html","./src/app/services/depart.service.ts","./src/app/components/form-group/form-group.component.ts","./src/app/components/form-group/form-group.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/city-filter/city-filter.component.ts","./src/app/components/city-filter/city-filter.component.html","./src/app/components/toasts/toasts.component.ts","./src/app/components/toasts/toasts.component.html","./src/app/interceptors/http-error.interceptor.ts","./src/app/components/cities-table/cities-table.component.ts","./src/app/components/cities-table/cities-table.component.html","./src/app/services/city.service.ts","./src/app/interceptors/api.interceptor.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Directive, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appNumeric]',\r\n})\r\nexport class NumericDirective {\r\n  constructor(private el: ElementRef) {\r\n  }\r\n\r\n  @HostListener('keydown', ['$event'])\r\n  onKeyDown(event: KeyboardEvent) {\r\n    if ('.,'.split('').includes(event.key)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  @HostListener('paste', ['$event'])\r\n  onPaste(event: ClipboardEvent) {\r\n    const oldValue = this.el.nativeElement.value;\r\n\r\n    for (let i = 0; i < event.clipboardData.items.length; i++) {\r\n      const item = event.clipboardData.items[i];\r\n\r\n      if (item.kind !== 'string' || item.type !== 'text/plain') {\r\n        continue;\r\n      }\r\n\r\n      item.getAsString(data => {\r\n        if (data.includes('.') || data.includes(',')) {\r\n          this.el.nativeElement.value = oldValue;\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Injectable, TemplateRef } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToastService {\r\n\r\n  constructor() { }\r\n\r\n  toasts: any[] = [];\r\n\r\n  show(header: string, textOrTpl: string | TemplateRef<any>, options: any = {}) {\r\n    this.toasts.push({ header, textOrTpl, ...options });\r\n  }\r\n\r\n  remove(toast) {\r\n    this.toasts = this.toasts.filter(t => t !== toast);\r\n  }\r\n}\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { City } from '../../models/city';\r\nimport { CityService } from '../../services/city.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { governments } from '../../models/government';\r\nimport { CityInput } from '../../models/city-input';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-city-form',\r\n  templateUrl: './city-form.component.html',\r\n  styleUrls: ['./city-form.component.scss'],\r\n})\r\nexport class CityFormComponent implements OnInit {\r\n  governments = governments;\r\n\r\n  isNew: boolean;\r\n  shown = false;\r\n\r\n  city: City;\r\n  form: FormGroup;\r\n\r\n  loading = false;\r\n\r\n  @Output() citySaved = new EventEmitter<{ city: City, isNew: boolean }>();\r\n\r\n  constructor(\r\n    private cityService: CityService,\r\n    private fb: FormBuilder,\r\n  ) {\r\n  }\r\n\r\n  private static defaultCity() {\r\n    return {\r\n      id: 0,\r\n      agglomeration: undefined,\r\n      area: undefined,\r\n      carCode: undefined,\r\n      creationDate: undefined,\r\n      government: undefined,\r\n      metersAboveSeaLevel: undefined,\r\n      name: undefined,\r\n      population: undefined,\r\n      coordinates: {\r\n        x: undefined,\r\n        y: undefined,\r\n      },\r\n      governor: {\r\n        birthday: undefined,\r\n        height: undefined,\r\n      },\r\n    } as City;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  open(city: City) {\r\n    this.isNew = city === null;\r\n    this.shown = true;\r\n\r\n    if (!this.isNew) {\r\n      this.city = city;\r\n    } else {\r\n      this.city = CityFormComponent.defaultCity();\r\n    }\r\n\r\n    this.setDetails(this.city);\r\n  }\r\n\r\n  setDetails(city: City) {\r\n    const { agglomeration, area, carCode, government, metersAboveSeaLevel, name, population, coordinates: { x, y }, governor: { height, birthday } } = city;\r\n\r\n    const birthDayStruct = {\r\n      year: birthday && birthday.getFullYear(),\r\n      month: birthday && birthday.getMonth() + 1,\r\n      day: birthday && birthday.getDate(),\r\n    } as NgbDateStruct;\r\n\r\n    if (!this.form) {\r\n      this.form = this.fb.group({\r\n        name: [name, [Validators.required, Validators.pattern(/\\S+/)]],\r\n        area: [area, [Validators.required, Validators.min(0)]],\r\n        population: [population, [Validators.required, Validators.min(0)]],\r\n        metersAboveSeaLevel: [metersAboveSeaLevel],\r\n        carCode: [carCode, [Validators.required, Validators.min(0), Validators.max(1000)]],\r\n        agglomeration: [agglomeration],\r\n        government: [government, [Validators.required, Validators.pattern(/\\S+/)]],\r\n        x: [x, [Validators.max(273)]],\r\n        y: [y, Validators.required],\r\n        height: [height, Validators.min(0)],\r\n        birthday: [birthDayStruct],\r\n      });\r\n    } else {\r\n      this.form.patchValue({\r\n        name,\r\n        area,\r\n        population,\r\n        metersAboveSeaLevel,\r\n        carCode,\r\n        agglomeration,\r\n        government,\r\n        x,\r\n        y,\r\n        height,\r\n        birthday: birthDayStruct,\r\n      });\r\n    }\r\n\r\n    this.form.markAllAsTouched();\r\n  }\r\n\r\n  save() {\r\n    this.form.markAllAsTouched();\r\n\r\n    if (!this.form.valid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n\r\n    this.cityService.save(this.formToCityInput()).pipe(\r\n      // mergeMap(id => this.cityService.findById(id || this.city.id)),\r\n      catchError(() => {\r\n        this.loading = false;\r\n        this.shown = false;\r\n\r\n        return null;\r\n      }),\r\n    ).subscribe(city => {\r\n      this.citySaved.emit({ city: null, isNew: this.isNew });\r\n\r\n      this.loading = false;\r\n      this.shown = false;\r\n    });\r\n  }\r\n\r\n  private formToCityInput(): CityInput {\r\n    const { name, area, population, metersAboveSeaLevel, carCode, agglomeration, government, x, y, height, birthday } = this.form.value;\r\n\r\n    const birthDayDate = birthday && new Date(\r\n      (birthday as NgbDateStruct).year,\r\n      (birthday as NgbDateStruct).month - 1,\r\n      (birthday as NgbDateStruct).day + 1,\r\n    ) || null;\r\n\r\n    return {\r\n      id: this.city.id,\r\n      name,\r\n      area,\r\n      population,\r\n      metersAboveSeaLevel,\r\n      carCode,\r\n      agglomeration,\r\n      government,\r\n      coordinates: {\r\n        x: x || null,\r\n        y,\r\n      },\r\n      governor: { height, birthday: birthDayDate },\r\n    };\r\n  }\r\n}\r\n","<div id=\"host\" class=\"p-4 overflow-hidden\" *ngIf=\"shown\">\r\n  <div [ngClass]=\"{ 'd-none': loading }\">\r\n    <button type=\"button\" class=\"close mt-n1\" aria-label=\"Close\" (click)=\"shown = false\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n    <div class=\"mb-4\">\r\n      <h5>{{ isNew ? 'New city' : ('City: ' + city.name + ' [' + city.id + ']') }}</h5>\r\n    </div>\r\n\r\n    <div class=\"h-100\" style=\"overflow-x: hidden !important;\">\r\n      <form [formGroup]=\"form\" *ngIf=\"form\">\r\n        <h6>General</h6>\r\n\r\n        <app-form-group title=\"Name\">\r\n          <input class=\"form-control\" formControlName=\"name\">\r\n        </app-form-group>\r\n\r\n        <app-form-group title=\"Creation date\" *ngIf=\"!isNew\">\r\n          <div class=\"form-control\">\r\n            {{ city.creationDate | date:'dd.MM.yyyy' }}\r\n          </div>\r\n        </app-form-group>\r\n\r\n        <h6>Metrics</h6>\r\n\r\n        <app-form-group title=\"Area\">\r\n          <input class=\"form-control\" formControlName=\"area\" type=\"number\" appNumeric>\r\n        </app-form-group>\r\n\r\n        <app-form-group title=\"Population\">\r\n          <input class=\"form-control\" formControlName=\"population\" type=\"number\" appNumeric>\r\n        </app-form-group>\r\n\r\n        <app-form-group title=\"Meters above sea level\">\r\n          <input class=\"form-control\" formControlName=\"metersAboveSeaLevel\" type=\"number\" appNumeric>\r\n        </app-form-group>\r\n\r\n        <app-form-group title=\"Car code\">\r\n          <input class=\"form-control\" formControlName=\"carCode\" type=\"number\" appNumeric>\r\n        </app-form-group>\r\n\r\n        <app-form-group title=\"Agglomeration\">\r\n          <input class=\"form-control\" formControlName=\"agglomeration\" type=\"number\">\r\n        </app-form-group>\r\n\r\n        <app-form-group title=\"Government\">\r\n          <select class=\"form-control\" formControlName=\"government\">\r\n            <option></option>\r\n            <option *ngFor=\"let gov of governments\" [value]=\"gov\">{{ gov | lowercase | titlecase }}</option>\r\n          </select>\r\n        </app-form-group>\r\n\r\n        <h6>Coordinates</h6>\r\n\r\n        <app-form-group title=\"X\">\r\n          <input class=\"form-control\" formControlName=\"x\" type=\"number\">\r\n        </app-form-group>\r\n\r\n        <app-form-group title=\"Y\">\r\n          <input class=\"form-control\" formControlName=\"y\" type=\"number\" appNumeric>\r\n        </app-form-group>\r\n\r\n        <h6>Governor</h6>\r\n\r\n        <app-form-group title=\"Height\">\r\n          <input class=\"form-control\" formControlName=\"height\" type=\"number\">\r\n        </app-form-group>\r\n\r\n        <app-form-group title=\"Birthdate\">\r\n          <div class=\"input-group\">\r\n            <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"dp\" formControlName=\"birthday\" ngbDatepicker\r\n                   #d=\"ngbDatepicker\">\r\n            <div class=\"input-group-append\">\r\n              <button class=\"btn btn-outline-secondary\" (click)=\"d.toggle()\" type=\"button\">\r\n                <i-bs name=\"calendar\"></i-bs>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </app-form-group>\r\n\r\n        <div class=\"d-flex justify-content-end flex-row mb-4\">\r\n          <button\r\n            class=\"btn btn-outline-success\"\r\n            style=\"min-width: 100px\"\r\n            [disabled]=\"!this.form.valid\"\r\n            (click)=\"save()\"\r\n            [ngClass]=\"{ 'btn-outline-danger': !this.form.valid }\"\r\n          >\r\n            Save\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <div class=\"w-100 h-100 d-flex justify-content-center align-items-center\" [ngClass]=\"{ 'd-none': !loading }\">\r\n    <div class=\"spinner-border text-secondary\" role=\"status\">\r\n      <span class=\"sr-only\">Loading...</span>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { defaultFields, FieldSort, FilterFieldType, SortDirection } from '../../models/filters';\r\n\r\n@Component({\r\n  selector: 'app-cities-ordering',\r\n  templateUrl: './cities-ordering.component.html',\r\n  styleUrls: ['./cities-ordering.component.scss'],\r\n})\r\nexport class CitiesOrderingComponent implements OnInit {\r\n  availableFields: FilterFieldType[] = [...defaultFields];\r\n  selectedFields: { field: FilterFieldType, sort: SortDirection }[] = [];\r\n\r\n  @Output() orderingUpdated = new EventEmitter<FieldSort[]>();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  selectField(field: FilterFieldType, ascending: boolean) {\r\n    this.selectedFields.push({ field, sort: ascending ? 'ASC' : 'DESC' });\r\n    this.availableFields.splice(this.availableFields.findIndex(x => x === field), 1);\r\n\r\n    this.notifyThatOrderingUpdated();\r\n  }\r\n\r\n  selectDirection(field: { field: FilterFieldType; sort: SortDirection }, ascending: boolean, button: HTMLButtonElement) {\r\n    field.sort = ascending ? 'ASC' : 'DESC';\r\n    button.blur();\r\n\r\n    this.notifyThatOrderingUpdated();\r\n  }\r\n\r\n  unselectField(field: FilterFieldType) {\r\n    this.selectedFields.splice(this.selectedFields.findIndex(x => x.field === field), 1);\r\n    this.availableFields.push(field);\r\n\r\n    this.notifyThatOrderingUpdated();\r\n  }\r\n\r\n  moveField(field: { field: FilterFieldType; sort: SortDirection }, up: boolean) {\r\n    const index = this.selectedFields.findIndex(x => x === field);\r\n\r\n    this.selectedFields.splice(index, 1);\r\n    this.selectedFields.splice(index + (up ? -1 : 1), 0, field);\r\n\r\n    this.notifyThatOrderingUpdated();\r\n  }\r\n\r\n  private notifyThatOrderingUpdated() {\r\n    this.orderingUpdated.emit(this.selectedFields.map(x => ({\r\n      field: x.field.field,\r\n      sort: x.sort,\r\n    })));\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col\">\r\n    <table class=\"table table-sm table-hover text-left\">\r\n      <thead>\r\n      <tr>\r\n        <th scope=\"col\" class=\"pl-4\">Available field</th>\r\n        <th scope=\"col\"></th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr *ngFor=\"let field of availableFields\">\r\n        <td class=\"pl-4\">\r\n          {{ field.label }}\r\n        </td>\r\n        <td class=\"text-right\">\r\n          <button class=\"btn btn-sm btn-link\" (click)=\"selectField(field, true)\">\r\n            <i-bs name=\"arrow-up\"></i-bs>\r\n          </button>\r\n          <button class=\"btn btn-sm btn-link\" (click)=\"selectField(field, false)\">\r\n            <i-bs name=\"arrow-down\"></i-bs>\r\n          </button>\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <div class=\"col\">\r\n    <table class=\"table table-sm table-hover text-left\">\r\n      <thead>\r\n      <tr>\r\n        <th scope=\"col\" class=\"pl-4\" style=\"width: 75px;\"></th>\r\n        <th scope=\"col\">Sort by field</th>\r\n        <th scope=\"col\" class=\"text-right\">Direction</th>\r\n        <th scope=\"col\" style=\"width: 20px\"></th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr *ngFor=\"let field of selectedFields; index as i\">\r\n        <td style=\"width: min-content;\">\r\n          <button class=\"btn btn-sm btn-link\" style=\"padding-top: 3px;\" [disabled]=\"i === 0\" (click)=\"moveField(field, true)\">\r\n            <i-bs name=\"caret-up-fill\"></i-bs>\r\n          </button>\r\n          <button class=\"btn btn-sm btn-link\" [disabled]=\"i === selectedFields.length - 1\" (click)=\"moveField(field, false)\">\r\n            <i-bs name=\"caret-down-fill\"></i-bs>\r\n          </button>\r\n        </td>\r\n        <td>\r\n          {{ field.field.label }}\r\n        </td>\r\n        <td class=\"text-right pr-2\">\r\n          <button\r\n            #buttonAsc\r\n            class=\"btn btn-sm btn-link\"\r\n            [ngClass]=\"field.sort === 'ASC' ? 'text-success' : 'text-secondary'\"\r\n            (click)=\"selectDirection(field, true, buttonAsc)\"\r\n          >\r\n            <i-bs name=\"arrow-up\"></i-bs>\r\n          </button>\r\n          <button\r\n            #buttonDesc\r\n            class=\"btn btn-sm btn-link\"\r\n            [ngClass]=\"field.sort === 'DESC' ? 'text-success' : 'text-secondary'\"\r\n            (click)=\"selectDirection(field, false, buttonDesc)\"\r\n          >\r\n            <i-bs name=\"arrow-down\"></i-bs>\r\n          </button>\r\n        </td>\r\n        <td>\r\n          <button class=\"btn btn-sm btn-link text-danger\" (click)=\"unselectField(field.field)\">\r\n            <i-bs name=\"trash\"></i-bs>\r\n          </button>\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n","import { governments } from './government';\r\n\r\nexport type FilterOperation =\r\n  | 'GREATER_THAN'\r\n  | 'LESS_THAN'\r\n  | 'GREATER_THAN_EQUAL'\r\n  | 'LESS_THAN_EQUAL'\r\n  | 'NOT_EQUAL'\r\n  | 'EQUAL'\r\n  | 'MATCH'\r\n  | 'MATCH_START'\r\n  | 'MATCH_END';\r\n\r\nexport const filterOperationLabels: { [operation: string]: string } = {\r\n  GREATER_THAN: 'Greater than',\r\n  LESS_THAN: 'Less than',\r\n  GREATER_THAN_EQUAL: 'Greater than equal',\r\n  LESS_THAN_EQUAL: 'Less than equal',\r\n  NOT_EQUAL: 'Not equal',\r\n  EQUAL: 'Equal',\r\n  MATCH: 'Match',\r\n  MATCH_START: 'Match start [%xyz]',\r\n  MATCH_END: 'Match end [xyz%]',\r\n};\r\n\r\nexport type FilterType =\r\n  | 'number'\r\n  | 'integer'\r\n  | 'string'\r\n  | 'select'\r\n  | 'date';\r\n\r\nexport const filterOperationsForType: { [type: string]: FilterOperation[] } = {\r\n  number: ['EQUAL', 'NOT_EQUAL', 'GREATER_THAN', 'LESS_THAN', 'GREATER_THAN_EQUAL', 'LESS_THAN_EQUAL'],\r\n  integer: ['EQUAL', 'NOT_EQUAL', 'GREATER_THAN', 'LESS_THAN', 'GREATER_THAN_EQUAL', 'LESS_THAN_EQUAL'],\r\n  string: ['EQUAL', 'NOT_EQUAL', 'MATCH', 'MATCH_START', 'MATCH_END'],\r\n  date: ['EQUAL', 'NOT_EQUAL', 'GREATER_THAN', 'LESS_THAN', 'GREATER_THAN_EQUAL', 'LESS_THAN_EQUAL'],\r\n  select: ['EQUAL', 'NOT_EQUAL', 'GREATER_THAN', 'LESS_THAN', 'GREATER_THAN_EQUAL', 'LESS_THAN_EQUAL'],\r\n};\r\n\r\nexport interface FilterFieldType {\r\n  label: string;\r\n  field: string;\r\n  type: FilterType;\r\n  selectSet?: string[];\r\n}\r\n\r\nexport const defaultFields: FilterFieldType[] = [\r\n  { label: 'Id', field: 'id', type: 'integer' },\r\n  { label: 'Name', field: 'name', type: 'string' },\r\n  { label: 'Creation date', field: 'creationDate', type: 'date' },\r\n  { label: 'Area', field: 'area', type: 'integer' },\r\n  { label: 'Population', field: 'population', type: 'integer' },\r\n  { label: 'Meters above sea level', field: 'metersAboveSeaLevel', type: 'integer' },\r\n  { label: 'Car code', field: 'carCode', type: 'integer' },\r\n  { label: 'Agglomeration', field: 'agglomeration', type: 'number' },\r\n  { label: 'Government', field: 'government', type: 'select', selectSet: governments },\r\n  { label: 'Coordinate: X', field: 'coordinates.x', type: 'number' },\r\n  { label: 'Coordinate: Y', field: 'coordinates.y', type: 'integer' },\r\n  { label: 'Governor: Height', field: 'governor.height', type: 'integer' },\r\n  { label: 'Governor: Birthday', field: 'governor.birthday', type: 'date' },\r\n];\r\n\r\nexport interface FilterFieldValue {\r\n  field: FilterFieldType;\r\n  operation: FilterOperation;\r\n  value: any;\r\n}\r\n\r\nexport interface SearchCriterion {\r\n  field: string;\r\n  operation: FilterOperation;\r\n  value: any;\r\n}\r\n\r\nexport type SortDirection = 'ASC' | 'DESC';\r\n\r\nexport interface FieldSort {\r\n  field: string;\r\n  sort: SortDirection;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","export const governments = [\r\n  'DESPOTISM',\r\n  'DIARCHY',\r\n  'NOOCRACY',\r\n  'OLIGARCHY',\r\n  'PLUTOCRACY',\r\n];\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { CityService } from '../../services/city.service';\r\nimport { City } from '../../models/city';\r\nimport { CityFormComponent } from '../city-form/city-form.component';\r\nimport { FieldSort, SearchCriterion } from '../../models/filters';\r\n\r\n@Component({\r\n  selector: 'app-cities',\r\n  templateUrl: './cities.component.html',\r\n  styleUrls: ['./cities.component.scss'],\r\n})\r\nexport class CitiesComponent implements OnInit {\r\n  @ViewChild('cityForm') cityForm: CityFormComponent;\r\n\r\n  active = 1;\r\n\r\n  cities: City[];\r\n  collectionSize = 0;\r\n  page = 1;\r\n  pageSize = 5;\r\n\r\n  filterValid = true;\r\n  criteria: SearchCriterion[] = [];\r\n  ordering: FieldSort[] = [];\r\n\r\n  constructor(\r\n    private cityService: CityService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.refreshCities();\r\n  }\r\n\r\n  deleteCity(city: City) {\r\n    this.cityService.delete(city).subscribe(() => {\r\n      // this.cities.splice(this.cities.findIndex(x => x.id === city.id), 1);\r\n      // this.collectionSize -= 1;\r\n      this.refreshCities();\r\n    });\r\n  }\r\n\r\n  editCity(city: City) {\r\n    this.cityForm.open(city);\r\n  }\r\n\r\n  refreshCities() {\r\n    this.cityService.list({\r\n      page: this.page - 1,\r\n      pageSize: this.pageSize,\r\n      criteria: this.criteria,\r\n      ordering: this.ordering,\r\n    }).subscribe(x => {\r\n      this.cities = x.content;\r\n      this.collectionSize = x.totalElements;\r\n    });\r\n  }\r\n\r\n  citySaved({ city, isNew }) {\r\n    this.refreshCities();\r\n  }\r\n\r\n  filterUpdated($event: { valid: boolean; criteria: SearchCriterion[] }) {\r\n    this.filterValid = $event.valid;\r\n    this.criteria = $event.criteria;\r\n  }\r\n\r\n  applyFilters(button: HTMLButtonElement) {\r\n    button.blur();\r\n    this.refreshCities();\r\n  }\r\n\r\n  orderingUpdated(ordering: FieldSort[]) {\r\n    this.ordering = ordering;\r\n  }\r\n\r\n  departed() {\r\n    this.refreshCities();\r\n  }\r\n}\r\n","<app-city-form #cityForm (citySaved)=\"citySaved($event)\"></app-city-form>\r\n<div class=\"container-fluid d-flex flex-column justify-content-center text-center p-4\">\r\n  <ng-container *ngTemplateOutlet=\"filterOrderTabs\"></ng-container>\r\n<!--  <div>-->\r\n<!--    <hr/>-->\r\n<!--  </div>-->\r\n<!--  <ng-container *ngTemplateOutlet=\"pagination\"></ng-container>-->\r\n\r\n  <app-city-depart (departed)=\"departed()\"></app-city-depart>\r\n  <app-cities-table\r\n    [cities]=\"cities\"\r\n    [collectionSize]=\"collectionSize\"\r\n    (deleteCityClick)=\"deleteCity($event)\"\r\n    (editCityClick)=\"editCity($event)\"\r\n  ></app-cities-table>\r\n\r\n  <ng-container *ngTemplateOutlet=\"pagination\"></ng-container>\r\n</div>\r\n\r\n<ng-template #filterOrderTabs>\r\n  <ul ngbNav #nav=\"ngbNav\" [(activeId)]=\"active\" [destroyOnHide]=\"false\" class=\"nav-tabs\">\r\n    <li [ngbNavItem]=\"1\">\r\n      <a ngbNavLink>Filters</a>\r\n      <ng-template ngbNavContent>\r\n        <app-city-filter (filterUpdated)=\"filterUpdated($event)\"></app-city-filter>\r\n      </ng-template>\r\n    </li>\r\n    <li [ngbNavItem]=\"2\">\r\n      <a ngbNavLink>Ordering</a>\r\n      <ng-template ngbNavContent>\r\n        <app-cities-ordering (orderingUpdated)=\"orderingUpdated($event)\"></app-cities-ordering>\r\n      </ng-template>\r\n    </li>\r\n    <li ngbNavItem class=\"ml-auto\">\r\n      <button class=\"btn btn-link\" [disabled]=\"!filterValid\" #applyButton (click)=\"applyFilters(applyButton)\">Apply filters and ordering</button>\r\n    </li>\r\n  </ul>\r\n  <div [ngbNavOutlet]=\"nav\" class=\"my-4\"></div>\r\n</ng-template>\r\n\r\n<ng-template #pagination>\r\n  <div class=\"d-flex justify-content-between\">\r\n    <ngb-pagination [collectionSize]=\"collectionSize\" [(page)]=\"page\" [pageSize]=\"pageSize\" (pageChange)=\"refreshCities()\" [maxSize]=\"10\">\r\n    </ngb-pagination>\r\n\r\n    <select class=\"custom-select\" style=\"width: auto\" [(ngModel)]=\"pageSize\" (ngModelChange)=\"refreshCities()\">\r\n      <option *ngFor=\"let n of [5, 10, 20, 50, 100]\" [ngValue]=\"n\">{{ n }} items per page</option>\r\n    </select>\r\n  </div>\r\n</ng-template>\r\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {DepartService} from \"../../services/depart.service\";\nimport {catchError} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\n\n@Component({\n  selector: 'app-city-depart',\n  templateUrl: './city-depart.component.html',\n  styleUrls: ['./city-depart.component.scss']\n})\nexport class CityDepartComponent implements OnInit {\n  firstId: string;\n  secondId: string;\n  thirdId: string;\n\n  population: number;\n\n  departFirstId: string;\n  departSecondId: string;\n  departSuccess: boolean;\n\n  @Output departed = new EventEmitter();\n\n  constructor(\n    private departService: DepartService\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  countDisabled() {\n    return !+this.firstId || !+this.secondId || !+this.thirdId\n      || +this.firstId < 0 || +this.secondId < 0 || +this.thirdId < 0;\n  }\n\n  count() {\n    this.departService.count(+this.firstId, +this.secondId, +this.thirdId)\n      .pipe(catchError(() => of(-1)))\n      .subscribe(value => {\n        this.population = value;\n      });\n  }\n\n  deportDisabled() {\n    return !+this.departFirstId || !+this.departSecondId\n      || +this.departFirstId < 0 || +this.departSecondId < 0;\n  }\n\n  deport() {\n    this.departService.depart(+this.departFirstId, +this.departSecondId)\n      .subscribe(\n        () => {\n          this.departSuccess = true;\n          this.departed.emit();\n        },\n        () => this.departSuccess = false\n      );\n  }\n}\n","<div class=\"d-flex flex-row py-3 align-items-center\">\n  <input [(ngModel)]=\"firstId\" style=\"max-width: 100px;\" class=\"form-control mr-3\" min=\"0\" appNumeric placeholder=\"First Id\">\n  <input [(ngModel)]=\"secondId\" style=\"max-width: 100px;\" class=\"form-control mr-3\" min=\"0\" appNumeric placeholder=\"Second Id\">\n  <input [(ngModel)]=\"thirdId\" style=\"max-width: 100px;\" class=\"form-control mr-3\" min=\"0\" appNumeric placeholder=\"Third Id\">\n  <button class=\"btn btn-outline-primary\" [disabled]=\"countDisabled()\" (click)=\"count()\">Count population</button>\n\n  <div class=\"ml-3\" *ngIf=\"population !== -1 && population\">Count: {{ population }}</div>\n  <div class=\"ml-3\" *ngIf=\"population === -1\">Invalid city id supplied</div>\n</div>\n\n<div class=\"d-flex flex-row pb-3 align-items-center\">\n  <input [(ngModel)]=\"departFirstId\" style=\"max-width: 100px;\" class=\"form-control mr-3\" min=\"0\" appNumeric placeholder=\"First Id\">\n  <input [(ngModel)]=\"departSecondId\" style=\"max-width: 100px;\" class=\"form-control mr-3\" min=\"0\" appNumeric placeholder=\"Second Id\">\n\n  <button class=\"btn btn-outline-primary\" [disabled]=\"deportDisabled()\" (click)=\"deport()\">Deport population</button>\n\n  <div class=\"ml-3\" *ngIf=\"departSuccess === true\">Success!</div>\n  <div class=\"ml-3\" *ngIf=\"departSuccess === false\">Invalid city id supplied</div>\n</div>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\n\nconst baseUrl = 'https://localhost:50101/cities/api/cities';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DepartService {\n  constructor(private http: HttpClient) {\n  }\n\n  count(a: number, b: number, c: number): Observable<number> {\n    return this.http.get<number>(`${baseUrl}/count/${a}/${b}/${c}`);\n  }\n\n  depart(a: number, b: number): Observable<unknown> {\n    return this.http.post(`${baseUrl}/deport/${a}/${b}`, null, {responseType: \"text\"});\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-form-group',\r\n  templateUrl: './form-group.component.html',\r\n  styleUrls: ['./form-group.component.scss'],\r\n})\r\nexport class FormGroupComponent implements OnInit {\r\n  @Input() title: string;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"form-group row\">\r\n  <label class=\"control-label col-3\">{{ title }}</label>\r\n  <div class=\"col\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ToastService } from './services/toast.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent {\r\n  title = 'front';\r\n}\r\n","<app-cities></app-cities>\r\n<app-toasts aria-live=\"polite\" aria-atomic=\"true\"></app-toasts>\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport {CityFormComponent} from './components/city-form/city-form.component';\r\nimport {CitiesComponent} from './components/cities/cities.component';\r\nimport {allIcons, NgxBootstrapIconsModule} from 'ngx-bootstrap-icons';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {NgBootstrapFormValidationModule} from 'ng-bootstrap-form-validation';\r\nimport {FormGroupComponent} from './components/form-group/form-group.component';\r\nimport {NumericDirective} from './directives/numeric.directive';\r\nimport {CitiesTableComponent} from './components/cities-table/cities-table.component';\r\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\r\nimport {APIInterceptor} from './interceptors/api.interceptor';\r\nimport {CityService} from './services/city.service';\r\nimport {CityFilterComponent} from './components/city-filter/city-filter.component';\r\nimport {CitiesOrderingComponent} from './components/cities-ordering/cities-ordering.component';\r\nimport {ToastsComponent} from './components/toasts/toasts.component';\r\nimport {HttpErrorInterceptor} from './interceptors/http-error.interceptor';\r\nimport {APP_BASE_HREF} from \"@angular/common\";\nimport { CityDepartComponent } from './components/city-depart/city-depart.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CityFormComponent,\r\n    CitiesComponent,\r\n    FormGroupComponent,\r\n    NumericDirective,\r\n    CitiesTableComponent,\r\n    CityFilterComponent,\r\n    CitiesOrderingComponent,\r\n    ToastsComponent,\r\n    CityDepartComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    NgbModule,\r\n    NgxBootstrapIconsModule.pick(allIcons),\r\n    ReactiveFormsModule,\r\n    NgBootstrapFormValidationModule.forRoot(),\r\n    NgBootstrapFormValidationModule,\r\n    FormsModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: APIInterceptor,\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: HttpErrorInterceptor,\r\n      multi: true,\r\n    },\r\n    CityService,\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {\r\n}\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport {\r\n  defaultFields,\r\n  FilterFieldValue,\r\n  FilterOperation,\r\n  filterOperationLabels,\r\n  filterOperationsForType,\r\n  SearchCriterion,\r\n} from 'src/app/models/filters';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\ntype FilterForm = { fieldIndex: number; operation: FilterOperation; value: any };\r\n\r\nconst filterValue = (filter: FilterForm) =>\r\n  defaultFields[filter.fieldIndex].type === 'date'\r\n    ? new Date(filter.value.year, filter.value.month - 1, filter.value.day + 1).toISOString().substring(0, 10)\r\n    : filter.value;\r\n\r\nconst formToCriteria = (filters: FilterForm[]) =>\r\n  filters.map(x => ({\r\n    field: defaultFields[x.fieldIndex].field,\r\n    operation: x.operation,\r\n    value: filterValue(x),\r\n  } as SearchCriterion));\r\n\r\n@Component({\r\n  selector: 'app-city-filter',\r\n  templateUrl: './city-filter.component.html',\r\n  styleUrls: ['./city-filter.component.scss'],\r\n})\r\nexport class CityFilterComponent implements OnInit {\r\n  filters: FilterFieldValue[] = [];\r\n\r\n  defaultFields = defaultFields;\r\n  filterOperationLabels = filterOperationLabels;\r\n  filterOperationsForType = filterOperationsForType;\r\n\r\n  form: FormArray;\r\n\r\n  @Output() filterUpdated = new EventEmitter<{ valid: boolean, criteria: SearchCriterion[] }>();\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n  ) {\r\n    this.form = this.fb.array([]);\r\n    this.form.valueChanges.subscribe(value => {\r\n      if (!this.form.valid) {\r\n        this.filterUpdated.emit({ valid: false, criteria: [] });\r\n        return;\r\n      }\r\n\r\n      const criteria = formToCriteria(value);\r\n      this.filterUpdated.emit({ valid: true, criteria });\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  addFilter() {\r\n    this.form.push(\r\n      this.fb.group({\r\n        fieldIndex: [0],\r\n        operation: [filterOperationsForType[defaultFields[0].type][0], Validators.required],\r\n        value: [null, Validators.required],\r\n      }),\r\n    );\r\n\r\n    this.form.markAllAsTouched();\r\n  }\r\n\r\n  removeFilter(i) {\r\n    this.form.removeAt(i);\r\n  }\r\n\r\n  fieldSelected(filter: FormGroup) {\r\n    const type = defaultFields[filter.value.fieldIndex].type;\r\n    const operations = filterOperationsForType[type];\r\n\r\n    if (!operations.includes(filter.value.operation)) {\r\n      filter.patchValue({ operation: null });\r\n    }\r\n\r\n    setTimeout(() => {\r\n      filter.setControl('value', this.fb.control(null, Validators.required));\r\n    });\r\n  }\r\n}\r\n","<table class=\"table table-sm table-hover\">\r\n  <thead>\r\n  <tr>\r\n    <th scope=\"col\" style=\"min-width: 200px; width: 200px\">Field</th>\r\n    <th scope=\"col\" style=\"min-width: 200px; width: 200px\">Operation</th>\r\n    <th scope=\"col\" style=\"width: 100%;\">Value</th>\r\n    <th scope=\"col\" class=\"text-right tool-button\">\r\n      <button class=\"btn btn-sm btn-link text-success tool-button\" (click)=\"addFilter()\">\r\n        Add\r\n      </button>\r\n    </th>\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n  <tr *ngFor=\"let filter of form.controls; index as i\" [formGroup]=\"filter\">\r\n    <td>\r\n      <select class=\"form-control form-control-sm\" formControlName=\"fieldIndex\" (ngModelChange)=\"fieldSelected(filter)\">\r\n        <option *ngFor=\"let field of defaultFields; index as i\" [value]=\"i\">{{ field.label }}</option>\r\n      </select>\r\n    </td>\r\n    <td>\r\n      <select class=\"form-control form-control-sm\" formControlName=\"operation\">\r\n        <option\r\n          *ngFor=\"let op of filterOperationsForType[defaultFields[filter.value.fieldIndex].type]\"\r\n          [value]=\"op\"\r\n        >\r\n          {{ filterOperationLabels[op] }}\r\n        </option>\r\n      </select>\r\n    </td>\r\n    <td>\r\n      <div [ngSwitch]=\"defaultFields[filter.value.fieldIndex].type\">\r\n        <div *ngSwitchCase=\"'number'\">\r\n          <input class=\"form-control form-control-sm\" formControlName=\"value\" type=\"number\">\r\n        </div>\r\n        <div *ngSwitchCase=\"'integer'\">\r\n          <input class=\"form-control form-control-sm\" formControlName=\"value\" type=\"number\" appNumeric>\r\n        </div>\r\n        <div *ngSwitchCase=\"'string'\">\r\n          <input class=\"form-control form-control-sm\" formControlName=\"value\">\r\n        </div>\r\n        <div *ngSwitchCase=\"'select'\">\r\n          <select class=\"form-control form-control-sm\" formControlName=\"value\">\r\n            <option *ngFor=\"let option of defaultFields[filter.value.fieldIndex].selectSet\" [value]=\"option\">\r\n              {{ option | lowercase | titlecase }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n        <div *ngSwitchCase=\"'date'\">\r\n          <div class=\"input-group\">\r\n            <input class=\"form-control form-control-sm\" placeholder=\"yyyy-mm-dd\" name=\"dp\" formControlName=\"value\" ngbDatepicker\r\n                   #d=\"ngbDatepicker\">\r\n            <div class=\"input-group-append\">\r\n              <button class=\"btn btn-sm btn-outline-secondary\" (click)=\"d.toggle()\" type=\"button\">\r\n                <i-bs name=\"calendar\"></i-bs>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div *ngSwitchDefault>\r\n          <h5>Something wrong</h5>\r\n        </div>\r\n      </div>\r\n    </td>\r\n    <td class=\"text-right\">\r\n      <button class=\"btn btn-sm btn-link text-danger tool-button\" (click)=\"removeFilter(i)\">\r\n        Remove\r\n      </button>\r\n    </td>\r\n  </tr>\r\n  <tr *ngIf=\"form.controls.length === 0\">\r\n    <td colspan=\"4\" class=\"p-3\">\r\n      <span>No filters applied</span>\r\n    </td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, HostBinding, OnInit, TemplateRef } from '@angular/core';\r\nimport { ToastService } from '../../services/toast.service';\r\n\r\n@Component({\r\n  selector: 'app-toasts',\r\n  templateUrl: './toasts.component.html',\r\n  styleUrls: ['./toasts.component.scss'],\r\n  // tslint:disable-next-line:no-host-metadata-property\r\n  // host: {'[class.ngb-toasts]': 'true'}\r\n})\r\nexport class ToastsComponent implements OnInit {\r\n  @HostBinding('class.ngb-toasts') binding = true;\r\n\r\n  constructor(public toastService: ToastService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  isTemplate(toast) { return toast.textOrTpl instanceof TemplateRef; }\r\n}\r\n","<ngb-toast\r\n  *ngFor=\"let toast of toastService.toasts\"\r\n  [class]=\"toast.classname\"\r\n  [autohide]=\"true\"\r\n  [delay]=\"toast.delay || 5000\"\r\n  (hide)=\"toastService.remove(toast)\"\r\n  [header]=\"toast.header\"\r\n>\r\n  <ng-template [ngIf]=\"isTemplate(toast)\" [ngIfElse]=\"text\">\r\n    <ng-template [ngTemplateOutlet]=\"toast.textOrTpl\"></ng-template>\r\n  </ng-template>\r\n\r\n  <ng-template #text>\r\n    <p style=\"white-space: pre-wrap\">\r\n      {{ toast.textOrTpl }}\r\n    </p>\r\n  </ng-template>\r\n</ngb-toast>\r\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\nimport { ToastService } from '../services/toast.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class HttpErrorInterceptor implements HttpInterceptor {\r\n  constructor(private toast: ToastService) {\r\n  }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(request)\r\n      .pipe(\r\n        // retry(1),\r\n        catchError((error: HttpErrorResponse) => {\r\n          console.log(error);\r\n\r\n          let errorMessage = '';\r\n          if (error.error instanceof ErrorEvent) {\r\n            // client-side error\r\n            errorMessage = `Error: ${error.error.message}`;\r\n          } else {\r\n            // server-side error\r\n            errorMessage = `Message: ${error.error instanceof Object ? JSON.stringify(error.error.errors, undefined, 2) : error.error}`;\r\n          }\r\n\r\n          if (error.status !== 404) {\r\n            this.toast.show(`Error Code: ${error.status}`, JSON.stringify(error, undefined, 2));\r\n          }\r\n\r\n          return throwError(error);\r\n        }),\r\n      );\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output, TemplateRef, ViewChild } from '@angular/core';\r\nimport { City } from '../../models/city';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-cities-table',\r\n  templateUrl: './cities-table.component.html',\r\n  styleUrls: ['./cities-table.component.scss'],\r\n})\r\nexport class CitiesTableComponent implements OnInit {\r\n  @Input() cities: City[];\r\n  @Input() collectionSize: number;\r\n\r\n  @Output() editCityClick = new EventEmitter<City>();\r\n  @Output() deleteCityClick = new EventEmitter<City>();\r\n\r\n  @ViewChild('deleteModal') deleteModal: TemplateRef<any>;\r\n\r\n  cityToDelete: City;\r\n\r\n  constructor(\r\n    private modalService: NgbModal,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  editCity(city: City) {\r\n    this.editCityClick.emit(city);\r\n  }\r\n\r\n  async deleteCity(city: City) {\r\n    this.cityToDelete = city;\r\n\r\n    try {\r\n      await this.modalService.open(this.deleteModal).result;\r\n      this.deleteCityClick.emit(city);\r\n    } catch  {\r\n    }\r\n  }\r\n}\r\n","<table class=\"table table-striped align-middle\">\r\n  <caption>Total: {{ collectionSize }} items</caption>\r\n  <thead>\r\n  <tr>\r\n    <th scope=\"col\">Id</th>\r\n    <th scope=\"col\">Name</th>\r\n    <th scope=\"col\">Creation date</th>\r\n    <th scope=\"col\">Area</th>\r\n    <th scope=\"col\">Population</th>\r\n    <th scope=\"col\">Meters above sea level</th>\r\n    <th scope=\"col\">Car code</th>\r\n    <th scope=\"col\">Agglomeration</th>\r\n    <th scope=\"col\">Government</th>\r\n    <th scope=\"col\">X</th>\r\n    <th scope=\"col\">Y</th>\r\n    <th scope=\"col\">Governor height</th>\r\n    <th scope=\"col\">Governor birthday</th>\r\n    <th scope=\"col\" colspan=\"2\">\r\n      <div class=\"w-100 d-flex justify-content-end\">\r\n        <button type=\"button\" class=\"btn btn-link text-success w-100\" (click)=\"editCity(null)\">\r\n          Add\r\n        </button>\r\n      </div>\r\n    </th>\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n  <tr *ngFor=\"let city of cities\">\r\n    <th scope=\"row\">{{ city.id | number }}</th>\r\n    <td>{{ city.name }}</td>\r\n    <td>{{ city.creationDate | date:'dd.MM.yyyy' }}</td>\r\n    <td>{{ city.area | number }}</td>\r\n    <td>{{ city.population | number }}</td>\r\n    <td>{{ city.metersAboveSeaLevel | number }}</td>\r\n    <td>{{ city.carCode }}</td>\r\n    <td>{{ city.agglomeration | number }}</td>\r\n    <td>{{ city.government | lowercase | titlecase }}</td>\r\n    <td>{{ city.coordinates.x | number:'.2-2' }}</td>\r\n    <td>{{ city.coordinates.y | number:'.2-2' }}</td>\r\n    <td>{{ city.governor && city.governor.height | number }}</td>\r\n    <td>{{ city.governor && city.governor.birthday | date:'dd.MM.yyyy' }}</td>\r\n    <td>\r\n      <button type=\"button\" class=\"btn btn-link\" (click)=\"editCity(city)\">\r\n        Edit\r\n      </button>\r\n      <button type=\"button\" class=\"btn btn-link text-danger\" (click)=\"deleteCity(city)\">\r\n        Delete\r\n      </button>\r\n    </td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<ng-template #deleteModal let-modal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Deleting city `{{ cityToDelete.name }}` </h4>\r\n    <button type=\"button\" class=\"close\" (click)=\"modal.dismiss()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <span>Are you sure you want to delete city `{{ cityToDelete.name }}`?</span>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"modal.dismiss()\" ngbAutofocus>\r\n      Cancel\r\n    </button>\r\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"modal.close()\">\r\n      Delete\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n","import { Injectable } from '@angular/core';\r\nimport { City } from '../models/city';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Pageable } from '../models/pageable';\r\nimport { map } from 'rxjs/operators';\r\nimport { CityInput } from '../models/city-input';\r\nimport { FieldSort, SearchCriterion } from '../models/filters';\r\n\r\nexport interface CityListQuery {\r\n  page: number;\r\n  pageSize: number;\r\n  criteria: SearchCriterion[];\r\n  ordering: FieldSort[];\r\n}\r\n\r\nconst baseUrl = 'https://localhost:50002/cities/api/cities';\r\n\r\nconst convertDatesForCity = city => ({\r\n  ...city,\r\n  creationDate: city.creationDate && new Date(city.creationDate),\r\n  governor: city.governor && {\r\n    ...city.governor,\r\n    birthday: city.governor.birthday && new Date(city.governor.birthday),\r\n  },\r\n});\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CityService {\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  list({ page, pageSize, criteria, ordering }: CityListQuery) {\r\n    const params: { [param: string]: string | string[] } = {\r\n      page: page + '',\r\n      size: pageSize + '',\r\n      criteria: criteria.map(x => [x.field, x.value, x.operation].map(encodeURIComponent).join(',')),\r\n      sort: ordering.map(x => [x.field, x.sort].map(encodeURIComponent).join(',')),\r\n    };\r\n\r\n    return this.http.get<Pageable<City>>(`${baseUrl}`, { params }).pipe(map(pageable => ({\r\n      ...pageable,\r\n      content: pageable.content.map(convertDatesForCity),\r\n    })));\r\n  }\r\n\r\n  findById(id) {\r\n    return this.http.get<City>(`${baseUrl}/${encodeURIComponent(id)}`);\r\n  }\r\n\r\n  save(city: CityInput) {\r\n    if (city.id === 0) {\r\n      return this.http.put(`${baseUrl}`, city, { responseType: 'text' });\r\n    } else {\r\n      return this.http.patch(`${baseUrl}/${encodeURIComponent(city.id)}`, city, { responseType: 'text' });\r\n    }\r\n  }\r\n\r\n  delete({ id }) {\r\n    return this.http.delete(`${baseUrl}/${encodeURIComponent(id)}`, { responseType: 'text' });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class APIInterceptor implements HttpInterceptor {\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    // if (window.location.origin === 'https://se.ifmo.ru') {\r\n    //   req = req.clone({ url: `https://localhost:50002/cities/${req.url}` });\r\n    // }\r\n\r\n    return next.handle(req);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}